{"remainingRequest":"/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/node_modules/_vue-loader@15.9.7@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js??vue-loader-options!/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/src/views/student/CourseList.vue?vue&type=template&id=8bc5c632&","dependencies":[{"path":"/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/src/views/student/CourseList.vue","mtime":1625946131163},{"path":"/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/node_modules/_vue-loader@15.9.7@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/taozehua/Downloads/软工2大作业/course-learning-frontend/node_modules/_vue-loader@15.9.7@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}